[{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d\",fact);\n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":0,"isCorrect":false,"first_saved_time":"3/22/2025, 10:38:57 AM","last_saved_time":"3/22/2025, 10:38:57 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":0,"isCorrect":false,"first_saved_time":"3/22/2025, 10:39:27 AM","last_saved_time":"3/22/2025, 10:39:27 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":0,"isCorrect":false,"first_saved_time":"3/22/2025, 10:39:59 AM","last_saved_time":"3/22/2025, 10:39:59 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<=end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":0,"isCorrect":false,"first_saved_time":"3/22/2025, 10:40:17 AM","last_saved_time":"3/22/2025, 10:40:17 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<=end;i++){\n        int fact=1;\n        if(start>end ||start<0||end<0){\n            printf(\"Invalid range\");\n        }\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":8,"isCorrect":false,"first_saved_time":"3/22/2025, 10:44:09 AM","last_saved_time":"3/22/2025, 10:44:09 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<=end;i++){\n        int fact=1;\n        if(start>end ||start<0||end<0){\n            printf(\"'Invalid range'.\");\n        }\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":8,"isCorrect":false,"first_saved_time":"3/22/2025, 10:44:37 AM","last_saved_time":"3/22/2025, 10:44:37 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    for (int i=start;i<=end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":8,"isCorrect":false,"first_saved_time":"3/22/2025, 10:46:02 AM","last_saved_time":"3/22/2025, 10:46:02 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    if (start>end){\n        printf(\"Invalid range\");\n    }\n    else{\n    for (int i=start;i<=end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":8,"isCorrect":false,"first_saved_time":"3/22/2025, 10:47:11 AM","last_saved_time":"3/22/2025, 10:47:11 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e10","code":"void factorialRange(int start,int end){\n    if (start>end||start<0||end<0){\n        printf(\"Invalid range\");\n    }\n    else{\n    for (int i=start;i<=end;i++){\n        int fact=1;\n        if (i==0){\n            printf(\"%d \\n\",fact);\n        }\n        else{\n            for(int j=i;j>0;j--){\n                fact*=j;\n            }\n            printf(\"%d \\n\",fact);\n            \n        }\n    }\n}}","problem_title":"Factorial Range","problem_description":"Create a function that prints the factorial of each number in a given range [start, end]. The factorial of a non-negative integer n (written as n!) is the product of all positive integers less than or equal to n. Factorial of 0 is 1.","total_test_cases":10,"total_correct":9,"isCorrect":false,"first_saved_time":"3/22/2025, 10:47:37 AM","last_saved_time":"3/22/2025, 10:47:37 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e11","code":"int mountainPeak(int N)\n{\n    int num=N,count=0;\n    while (num>0){\n        num=num/10;\n        count++;\n    }\n    if (count%2==0){\n        return -1;\n    }\n    else{\n        count++;\n        for(int i=1;i<count/2;i++){\n            N=N/10;\n        }\n        return N%10;\n    }\n    \n}","problem_title":"Digit Sequence Mountain Peak Finder","problem_description":"Given an integer N, determine if its digits form a mountain pattern. A digit mountain has digits strictly increasing up to exactly one peak, then strictly decreasing afterward. The number must have at least 3 digits. If the digits form a mountain, output the digit at the peak. Otherwise, output -1.","total_test_cases":11,"total_correct":0,"isCorrect":false,"first_saved_time":"3/22/2025, 10:51:25 AM","last_saved_time":"3/22/2025, 10:51:25 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e11","code":"int mountainPeak(int N)\n{\n    int num=N,count=0;\n    while (num>0){\n        num=num/10;\n        count++;\n    }\n    if (count%2==0){\n        return -1;\n    }\n    if(count==1){\n        return -1;\n    }\n    else{\n        count++;\n        for(int i=1;i<count/2;i++){\n            N=N/10;\n        }\n        return N%10;\n    }\n    \n}","problem_title":"Digit Sequence Mountain Peak Finder","problem_description":"Given an integer N, determine if its digits form a mountain pattern. A digit mountain has digits strictly increasing up to exactly one peak, then strictly decreasing afterward. The number must have at least 3 digits. If the digits form a mountain, output the digit at the peak. Otherwise, output -1.","total_test_cases":11,"total_correct":7,"isCorrect":false,"first_saved_time":"3/22/2025, 10:55:02 AM","last_saved_time":"3/22/2025, 10:55:02 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e11","code":"int mountainPeak(int N)\n{\n    int num=N,count=0;\n    while (num>0){\n        num=num/10;\n        count++;\n    }\n    if (count%2==0){\n        return -1;\n    }\n    if(count<3){\n        return -1;\n    }\n    else{\n        count++;\n        for(int i=1;i<count/2;i++){\n            N=N/10;\n        }\n        return N%10;\n    }\n    \n}","problem_title":"Digit Sequence Mountain Peak Finder","problem_description":"Given an integer N, determine if its digits form a mountain pattern. A digit mountain has digits strictly increasing up to exactly one peak, then strictly decreasing afterward. The number must have at least 3 digits. If the digits form a mountain, output the digit at the peak. Otherwise, output -1.","total_test_cases":11,"total_correct":7,"isCorrect":false,"first_saved_time":"3/22/2025, 10:57:24 AM","last_saved_time":"3/22/2025, 10:57:24 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e11","code":"int mountainPeak(int N)\n{\n    int num=N,count=0;\n    while (num>0){\n        num=num/10;\n        count++;\n    }\n    if (count%2==0){\n        return -1;\n    }\n    if(count<3){\n        return -1;\n    }\n    if(N%10!=N/(count*10)){\n        return -1;\n    }\n    else{\n        count++;\n        for(int i=1;i<count/2;i++){\n            N=N/10;\n        }\n        return N%10;\n    }\n    \n}","problem_title":"Digit Sequence Mountain Peak Finder","problem_description":"Given an integer N, determine if its digits form a mountain pattern. A digit mountain has digits strictly increasing up to exactly one peak, then strictly decreasing afterward. The number must have at least 3 digits. If the digits form a mountain, output the digit at the peak. Otherwise, output -1.","total_test_cases":11,"total_correct":7,"isCorrect":false,"first_saved_time":"3/22/2025, 11:00:25 AM","last_saved_time":"3/22/2025, 11:00:25 AM"},{"course_id":"67ddfff19bfeb7c8d57ef99a","problem_id":"67de00956ac3fec9afb90e11","code":"int mountainPeak(int N)\n{\n    int num=N,count=0;\n    while (num>0){\n        num=num/10;\n        count++;\n    }\n    if (count%2==0){\n        return -1;\n    }\n    if(count<3){\n        return -1;\n    }\n    if(N%10!=(N/((count-1)*10))){\n        return -1;\n    }\n    else{\n        count++;\n        for(int i=1;i<count/2;i++){\n            N=N/10;\n        }\n        return N%10;\n    }\n    \n}","problem_title":"Digit Sequence Mountain Peak Finder","problem_description":"Given an integer N, determine if its digits form a mountain pattern. A digit mountain has digits strictly increasing up to exactly one peak, then strictly decreasing afterward. The number must have at least 3 digits. If the digits form a mountain, output the digit at the peak. Otherwise, output -1.","total_test_cases":11,"total_correct":7,"isCorrect":false,"first_saved_time":"3/22/2025, 11:01:25 AM","last_saved_time":"3/22/2025, 11:01:25 AM"}]